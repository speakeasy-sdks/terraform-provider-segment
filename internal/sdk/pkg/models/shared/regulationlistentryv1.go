// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RegulationListEntryV1Status string

const (
	RegulationListEntryV1StatusFailed         RegulationListEntryV1Status = "FAILED"
	RegulationListEntryV1StatusFinished       RegulationListEntryV1Status = "FINISHED"
	RegulationListEntryV1StatusInitialized    RegulationListEntryV1Status = "INITIALIZED"
	RegulationListEntryV1StatusInvalid        RegulationListEntryV1Status = "INVALID"
	RegulationListEntryV1StatusNotSupported   RegulationListEntryV1Status = "NOT_SUPPORTED"
	RegulationListEntryV1StatusPartialSuccess RegulationListEntryV1Status = "PARTIAL_SUCCESS"
	RegulationListEntryV1StatusRunning        RegulationListEntryV1Status = "RUNNING"
)

func (e RegulationListEntryV1Status) ToPointer() *RegulationListEntryV1Status {
	return &e
}

func (e *RegulationListEntryV1Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "FINISHED":
		fallthrough
	case "INITIALIZED":
		fallthrough
	case "INVALID":
		fallthrough
	case "NOT_SUPPORTED":
		fallthrough
	case "PARTIAL_SUCCESS":
		fallthrough
	case "RUNNING":
		*e = RegulationListEntryV1Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegulationListEntryV1Status: %v", v)
	}
}

type RegulationListEntryV1 struct {
	CreatedAt   string                      `json:"createdAt"`
	FinishedAt  *string                     `json:"finishedAt,omitempty"`
	ID          string                      `json:"id"`
	Status      RegulationListEntryV1Status `json:"status"`
	SubjectType string                      `json:"subjectType"`
	Subjects    []string                    `json:"subjects"`
}

func (o *RegulationListEntryV1) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *RegulationListEntryV1) GetFinishedAt() *string {
	if o == nil {
		return nil
	}
	return o.FinishedAt
}

func (o *RegulationListEntryV1) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RegulationListEntryV1) GetStatus() RegulationListEntryV1Status {
	if o == nil {
		return RegulationListEntryV1Status("")
	}
	return o.Status
}

func (o *RegulationListEntryV1) GetSubjectType() string {
	if o == nil {
		return ""
	}
	return o.SubjectType
}

func (o *RegulationListEntryV1) GetSubjects() []string {
	if o == nil {
		return []string{}
	}
	return o.Subjects
}
