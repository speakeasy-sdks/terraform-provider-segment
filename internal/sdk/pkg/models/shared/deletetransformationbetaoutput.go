// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteTransformationBetaOutputStatus - The operation status.
type DeleteTransformationBetaOutputStatus string

const (
	DeleteTransformationBetaOutputStatusSuccess DeleteTransformationBetaOutputStatus = "SUCCESS"
)

func (e DeleteTransformationBetaOutputStatus) ToPointer() *DeleteTransformationBetaOutputStatus {
	return &e
}

func (e *DeleteTransformationBetaOutputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = DeleteTransformationBetaOutputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransformationBetaOutputStatus: %v", v)
	}
}

// DeleteTransformationBetaOutput - The output of delete Transformation.
type DeleteTransformationBetaOutput struct {
	// The operation status.
	Status DeleteTransformationBetaOutputStatus `json:"status"`
}

func (o *DeleteTransformationBetaOutput) GetStatus() DeleteTransformationBetaOutputStatus {
	if o == nil {
		return DeleteTransformationBetaOutputStatus("")
	}
	return o.Status
}
