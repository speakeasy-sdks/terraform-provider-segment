// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RemoveRuleV1Type - The type for this Tracking Plan rule.
type RemoveRuleV1Type string

const (
	RemoveRuleV1TypeCommon   RemoveRuleV1Type = "COMMON"
	RemoveRuleV1TypeGroup    RemoveRuleV1Type = "GROUP"
	RemoveRuleV1TypeIdentify RemoveRuleV1Type = "IDENTIFY"
	RemoveRuleV1TypePage     RemoveRuleV1Type = "PAGE"
	RemoveRuleV1TypeScreen   RemoveRuleV1Type = "SCREEN"
	RemoveRuleV1TypeTrack    RemoveRuleV1Type = "TRACK"
)

func (e RemoveRuleV1Type) ToPointer() *RemoveRuleV1Type {
	return &e
}

func (e *RemoveRuleV1Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMMON":
		fallthrough
	case "GROUP":
		fallthrough
	case "IDENTIFY":
		fallthrough
	case "PAGE":
		fallthrough
	case "SCREEN":
		fallthrough
	case "TRACK":
		*e = RemoveRuleV1Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveRuleV1Type: %v", v)
	}
}

// RemoveRuleV1 - Represents the parameters needed to identify a rule on the backend-side.
type RemoveRuleV1 struct {
	// Key to this rule (free-form string like 'Button clicked').
	Key *string `json:"key,omitempty"`
	// The type for this Tracking Plan rule.
	Type RemoveRuleV1Type `json:"type"`
	// Version of this rule.
	Version float64 `json:"version"`
}

func (o *RemoveRuleV1) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *RemoveRuleV1) GetType() RemoveRuleV1Type {
	if o == nil {
		return RemoveRuleV1Type("")
	}
	return o.Type
}

func (o *RemoveRuleV1) GetVersion() float64 {
	if o == nil {
		return 0.0
	}
	return o.Version
}
