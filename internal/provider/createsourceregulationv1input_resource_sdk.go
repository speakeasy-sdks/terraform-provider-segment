// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/operations"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/shared"
)

func (r *CreateSourceRegulationV1InputResourceModel) ToCreateSDKType() *shared.CreateSourceRegulationV1Input {
	regulationType := shared.CreateSourceRegulationV1InputRegulationType(r.RegulationType.ValueString())
	var subjectIds []string = nil
	for _, subjectIdsItem := range r.SubjectIds {
		subjectIds = append(subjectIds, subjectIdsItem.ValueString())
	}
	subjectType := shared.CreateSourceRegulationV1InputSubjectType(r.SubjectType.ValueString())
	out := shared.CreateSourceRegulationV1Input{
		RegulationType: regulationType,
		SubjectIds:     subjectIds,
		SubjectType:    subjectType,
	}
	return &out
}

func (r *CreateSourceRegulationV1InputResourceModel) RefreshFromCreateResponse(resp *operations.CreateSourceRegulationResponseBody) {
	if resp.Data == nil {
		r.Data = nil
	} else {
		r.Data = &CreateCloudSourceRegulationV1Output{}
		r.Data.RegulateID = types.StringValue(resp.Data.RegulateID)
	}
}
