// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/operations"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/shared"
	"math/big"
)

func (r *CreateUserGroupV1InputResourceModel) ToCreateSDKType() *shared.CreateUserGroupV1Input {
	name := r.Name.ValueString()
	out := shared.CreateUserGroupV1Input{
		Name: name,
	}
	return &out
}

func (r *CreateUserGroupV1InputResourceModel) RefreshFromCreateResponse(resp *operations.CreateUserGroupResponseBody) {
	if resp.Data == nil {
		r.Data = nil
	} else {
		r.Data = &AddUsersToUserGroupV1Output{}
		r.Data.UserGroup.ID = types.StringValue(resp.Data.UserGroup.ID)
		r.Data.UserGroup.MemberCount = types.NumberValue(big.NewFloat(float64(resp.Data.UserGroup.MemberCount)))
		r.Data.UserGroup.Name = types.StringValue(resp.Data.UserGroup.Name)
		r.Data.UserGroup.Permissions = nil
		for _, permissionsItem := range resp.Data.UserGroup.Permissions {
			var permissions1 PermissionV1
			permissions1.Labels = nil
			for _, labelsItem := range permissionsItem.Labels {
				var labels1 LabelV1
				if labelsItem.Description != nil {
					labels1.Description = types.StringValue(*labelsItem.Description)
				} else {
					labels1.Description = types.StringNull()
				}
				labels1.Key = types.StringValue(labelsItem.Key)
				labels1.Value = types.StringValue(labelsItem.Value)
				permissions1.Labels = append(permissions1.Labels, labels1)
			}
			permissions1.Resources = nil
			for _, resourcesItem := range permissionsItem.Resources {
				var resources1 PermissionResourceV1
				resources1.ID = types.StringValue(resourcesItem.ID)
				resources1.Labels = nil
				for _, labelsItem1 := range resourcesItem.Labels {
					var labels3 LabelV1
					if labelsItem1.Description != nil {
						labels3.Description = types.StringValue(*labelsItem1.Description)
					} else {
						labels3.Description = types.StringNull()
					}
					labels3.Key = types.StringValue(labelsItem1.Key)
					labels3.Value = types.StringValue(labelsItem1.Value)
					resources1.Labels = append(resources1.Labels, labels3)
				}
				resources1.Type = types.StringValue(string(resourcesItem.Type))
				permissions1.Resources = append(permissions1.Resources, resources1)
			}
			permissions1.RoleID = types.StringValue(permissionsItem.RoleID)
			permissions1.RoleName = types.StringValue(permissionsItem.RoleName)
			r.Data.UserGroup.Permissions = append(r.Data.UserGroup.Permissions, permissions1)
		}
	}
}
