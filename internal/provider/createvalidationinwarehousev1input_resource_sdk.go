// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/scentregroup/terraform-provider-segment/internal/provider/types"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/models/operations"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/models/shared"
)

func (r *CreateValidationInWarehouseV1InputResourceModel) ToSharedCreateValidationInWarehouseV1Input() *shared.CreateValidationInWarehouseV1Input {
	metadataID := r.MetadataID.ValueString()
	settings := make(map[string]interface{})
	for settingsKey, settingsValue := range r.Settings {
		var settingsInst interface{}
		_ = json.Unmarshal([]byte(settingsValue.ValueString()), &settingsInst)
		settings[settingsKey] = settingsInst
	}
	out := shared.CreateValidationInWarehouseV1Input{
		MetadataID: metadataID,
		Settings:   settings,
	}
	return &out
}

func (r *CreateValidationInWarehouseV1InputResourceModel) RefreshFromOperationsCreateValidationInWarehouseResponseBody(resp *operations.CreateValidationInWarehouseResponseBody) {
	if resp != nil {
		if resp.Data == nil {
			r.Data = nil
		} else {
			r.Data = &tfTypes.CreateValidationInWarehouseV1Output{}
			r.Data.Status = types.StringValue(string(resp.Data.Status))
		}
	}
}
