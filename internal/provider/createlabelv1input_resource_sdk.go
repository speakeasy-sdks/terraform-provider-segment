// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/operations"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/shared"
)

func (r *CreateLabelV1InputResourceModel) ToSharedCreateLabelV1Input() *shared.CreateLabelV1Input {
	description := new(string)
	if !r.Label.Description.IsUnknown() && !r.Label.Description.IsNull() {
		*description = r.Label.Description.ValueString()
	} else {
		description = nil
	}
	key := r.Label.Key.ValueString()
	value := r.Label.Value.ValueString()
	label := shared.Label{
		Description: description,
		Key:         key,
		Value:       value,
	}
	out := shared.CreateLabelV1Input{
		Label: label,
	}
	return &out
}

func (r *CreateLabelV1InputResourceModel) RefreshFromOperationsCreateLabelResponseBody(resp *operations.CreateLabelResponseBody) {
	if resp != nil {
		if resp.Data == nil {
			r.Data = nil
		} else {
			r.Data = &CreateLabelV1Output{}
			r.Data.Label.Description = types.StringPointerValue(resp.Data.Label.Description)
			r.Data.Label.Key = types.StringValue(resp.Data.Label.Key)
			r.Data.Label.Value = types.StringValue(resp.Data.Label.Value)
		}
	}
}
