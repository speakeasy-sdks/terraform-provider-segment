// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/operations"
	"github.com/scentregroup/terraform-provider-segment/internal/sdk/pkg/models/shared"
)

func (r *AddLabelsToSourceV1InputResourceModel) ToSharedAddLabelsToSourceV1Input() *shared.AddLabelsToSourceV1Input {
	var labels []shared.LabelV1 = nil
	for _, labelsItem := range r.Labels {
		description := new(string)
		if !labelsItem.Description.IsUnknown() && !labelsItem.Description.IsNull() {
			*description = labelsItem.Description.ValueString()
		} else {
			description = nil
		}
		key := labelsItem.Key.ValueString()
		value := labelsItem.Value.ValueString()
		labels = append(labels, shared.LabelV1{
			Description: description,
			Key:         key,
			Value:       value,
		})
	}
	out := shared.AddLabelsToSourceV1Input{
		Labels: labels,
	}
	return &out
}

func (r *AddLabelsToSourceV1InputResourceModel) RefreshFromOperationsAddLabelsToSourceResponseBody(resp *operations.AddLabelsToSourceResponseBody) {
	if resp.Data == nil {
		r.Data = nil
	} else {
		r.Data = &AddLabelsToSourceV1Output{}
		if len(r.Data.Labels) > len(resp.Data.Labels) {
			r.Data.Labels = r.Data.Labels[:len(resp.Data.Labels)]
		}
		for labelsCount, labelsItem := range resp.Data.Labels {
			var labels1 LabelV1
			if labelsItem.Description != nil {
				labels1.Description = types.StringValue(*labelsItem.Description)
			} else {
				labels1.Description = types.StringNull()
			}
			labels1.Key = types.StringValue(labelsItem.Key)
			labels1.Value = types.StringValue(labelsItem.Value)
			if labelsCount+1 > len(r.Data.Labels) {
				r.Data.Labels = append(r.Data.Labels, labels1)
			} else {
				r.Data.Labels[labelsCount].Description = labels1.Description
				r.Data.Labels[labelsCount].Key = labels1.Key
				r.Data.Labels[labelsCount].Value = labels1.Value
			}
		}
	}
}
